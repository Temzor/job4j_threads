package ru.job4j.atomicity;

public final class Cache {
    /**
     * Атомарность - это действия (или их последовательность), которые должны происходить "все и сразу" (не разрывно).
     * Операция в методе @Cache не атомарна
     * Все операции, где данные зависят от начального состояния не атомарны. Эти операции можно описать через процесс "проверить и выполнить".
     *
     * В этой операции происходит проверка cache == null, потом присвоение cache = new Cache() и  возврат значения return cache.
     * Операция происходит поэтапно. То есть одна нить может вызвать этот метод и проверить, что объект
     * равен null и затем перейти к присвоению, а в этот момент другая нить может вызвать этот же метод и тоже проверка вернет
     * null, так как первая нить еще не успела присвоить значение.
     */
    private static Cache cache;

    public static Cache instOf() {
        if (cache == null) {
            cache = new Cache();
        }
        return cache;
    }
}